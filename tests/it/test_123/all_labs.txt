*Что возвращает функция getpid ?
+ Возвращает идентификатор текущего процесса.
- Возвращает идентификатор дочернего процесса
- Возвращает идентификатор процесса родителя
- Возвращает идентификатор следующего процесса 
*Какое расширение имеют статические библиотеки?
-.c
- .so
+ .a
- .o
*Назовите функцию двумерного массива
- putenv()
-  lseek()
+ environ ()
- getenv()
*Что такое Linux?
+ Многозадачная операционная система
- Язык программирования.
- Компьютерная игра.
- Марка видеокарт
*Компиляция – это :
+ Процесс перевода исходного кода программы в исполняемый код
- Процесс перевода исполняемого кода программы в исходный код
- Процесс деинсталляции системы
- Процесс вывода на экран сообщения
*Makefile состоит из трех элементов:
+ комментарии, макроопределения и целевые связки
- табуляция, опции, цели
- репозитория, клиента, интерфейса
- правил, файлов, библиотек
*Главное преимущество make файла:
+ компилирует только изменённые файлы
- работа со своими собственными сценариями 
- может иметь любое имя
- возможность описать знания, которые необходимы для компиляции программы
*Какая функция удаляет переменную из окружения?
- bush ()
- clean ()
+ unsetenv()
- pool ()
*.Что возвращает unsetenv():
- void
+ int
- main
- char
* /* hello.c */ #? <stdio.h>  int main (void)  {  printf ("Hello World\n");  }  Вместо ? поставьте нужный символ 
+include 
- int
- clean 
- pid_t 
* Функция Math.pow это? 
- функция вычисления синуса аргумента 
- функция вычелесния модуля аргумента 
- функция вычисляющая квадратный корень аргумента 
+ функция возведения аргумента в указанную степень 
* IDE это? 
- IT - компания 
- библиотека в языке программирования C++ 
- компилятор в linux 
+ интегрированная среда разработки
* Что такое окружение?
- это полноценный интерпретатор собственного языка программирования. 
- это просто архив объектных файлов, который подключается к программе во время линковки. 
- это процесс, запущенной и работающей в Linux программы
+ это набор пар ПЕРЕМЕННАЯ=ЗНАЧЕНИЕ, доступный каждому пользовательскому процессу. 
* Дать определение вытесняющей многозадачности 
- режим многозадачности, при котором переключение процессов возможно в любой момент времени; 
- режим, при котором переключение процессов возможно только, когда работающий процесс вызовет системную функцию; 
- режим многозадачности, при котором каждый новый процесс монопольно занимает процессорное время, а состояние остальных процессов записывается в файл подкачки; 
+ режим многозадачности, при котором переключение процессов происходит через определенные кванты времени соответственно приоритетам
* За что отвечает функция getenv?
+ Чтение окружения 
- сырая модификация 
- модификация окружения
- запись окружения
* Какой каталог Linux содержит наиболее важные программы и команды?
+/bin
- /dev 
- /lib 
- /m
* Как обозначается домашний каталог?
- / 
+ ~
- $ 
- ...
* Какое название должно быть у файла, который отвечает за сборку библиотек и/или исполняемых файлов на Linux?
- Make
- make
+ Makefile
- makefile
* Что должны в себе содержать .h файлы?
- структуры и классы
- классы и функции
+ объявление функций и структуры
- только объявление функций
* Переменная в окружении компьютера отвечающая за имя пользователя:
- HOME
+ USER 
- PATH
- TERM
* Какое имя переменной окружения нужно ввести, чтобы увидеть тип терминала: 
- PWD
- HOME
+ TERM
- USER
* Для чего используется системный вызов lseek():
+ Изменяет текущую позицию чтения-записи 
- Записывает данные в файл
- Позволяет читать данные из файла
- Закрывает файл
*  Что делает функция fork()?
+ » Клонирует» процессы .
- Заменяет образ процесса.
- Возвращает идентификатор родителя.
- Возвращает идентификатор текущего процесса.
* В каком типе данных хранится копия окружения компьютера:
- Массив
- Строка
+ Двумерный массив  
- Трёхмерный массив
*  Как расшифровывается Модель "КИС"? 
- Клиент-Инструкция-Сервер 
- Константа-Интерфейс-Сервис 
+ Клиент-Интерфейс-Сервер 
- Класс-Инкапсуляция-Скрипт
* Как правильно откомпилировать файл hello.c? 
+ $ gcc -o hello hello.c 
- $ gcc -0 hello hello.c 
- $ gcc -o hello.c 
- $ gdd -o hello hello.c 
* Репозиторий – это
+ Рабочий каталог, в котором находятся исходники, сценарии сборки (Makefile) и прочие файлы, относящиеся к проекту.
- Элегантная концепция распределения исходного кода
- Файл, содержимое которого автоматически добавляется препроцессором в исходный текст в том месте, где располагается некоторая директива 
- Набор скомпонованных особым образом объектных файлов
* Какие действия выполняет следующая команда? Mv file1 file2 
- копирует file1 и создаёт file2; 
+ переименовывает file1 в file2; 
- создаёт file2 и удаляет file1; 
- сравнивает file1 и file2.
* Что такое статическая библиотека?
-  непрерывный участок памяти, содержащий последовательность объектов одинакового типа
+ это просто архив объектных файлов, который подключается к программе во время линковки
- место, в котором находятся директивы препроцессора
- источник образовательного контента в IT-сфере
* Сколько файлов может открыть процесс?
- 1024
+ В каждой системе есть свой лимит, зависящий от конфигурации.
- Только один
- Неограниченно, задаётся самим процессом
* Что выполняет утилита make:
- Написание проекта
+ сборка проекта
- Очистка проекта
- Запись проекта
* Для чего используется execve() ? 
- Возвращает идентификатор ID родительского процесса 
+ Заменяет текущий образ процесса
- Возвращает идентификатор ID текущего процесса 
- Проверяет, существует ли переменная в окружении
* Какой Файл называют бинарником
+ Файл, содержащий исполняемый код программы.
- Файл не содержащий исполняемый код программы .
- Файл содержащий исходный код программы .
- Обычный файл.
* Что возвращает функция getppid ?
- Возвращает идентификатор текущего процесса.
- Возвращает идентификатор дочернего процесса.
+Возвращает идентификатор процесса родителя.
- Возвращает идентификатор следующего процесса.
* Как правильно запустить исполняемый файл hello? 
- $ open hello 
- $ cd hello 
+ $ ./hello 
- $ .\hello